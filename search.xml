<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>课堂笔记22-10-21(Web应用开发)</title>
      <link href="/post/ad858a85.html"/>
      <url>/post/ad858a85.html</url>
      
        <content type="html"><![CDATA[<h1 id="Web应用开发"><a href="#Web应用开发" class="headerlink" title="Web应用开发"></a>Web应用开发</h1><h2 id="Bootstrap网络系统"><a href="#Bootstrap网络系统" class="headerlink" title="Bootstrap网络系统"></a>Bootstrap网络系统</h2><ol><li><p>网络编码规范</p><ol><li>视同行快来创建列的水平组</li><li>在行块中创建列块，内容应该放置在每行的列块内，且只有列可以是行的直接元素</li><li>预定义的栅格类,比如.row和.col-xs-4，可用于快速创建栅格布局。</li><li>网格,即列块必须放在行块中,而行块又必须放置在容器块(即DIV的class值为container）中,以便获得适当的对齐和内边距。</li></ol></li><li><p>字体图标</p><ol><li><p>在HTML网页的制作过程中为了追求用户体验经常会用到很多小图标，如果每个小图标都用图片来实现，会发送很多请求小图标图片请求，严重拖慢网页加载速度。为了解决小图标的加载问题，出现了字体图标。</p></li><li><p>字体图标运行结果是图标，但是源代码是一种字体，而且Bootstrap将图标字体封装在了一个个CSS类样式中，这些图标字体CSS类样式被放在Bootstrap总样式文件bootstrap.min.css中。如需使用Bootstrap字体图标，只需要简单地使用<span>并指定<span>的class属性值为某个图标CSS类样式名即可，</p><ol><li><pre><code class="web-idl">列如&lt;span class=&quot;glyphion glyphion-search&quot;&gt;&lt;/span&gt;就引入了查询图标</code></pre></li></ol></li></ol></li><li><p>如果要用界面需要将需求展现清楚，用户界面必须有一下要求：</p><ol><li>如果系统按照子系统，子模块，子功能三级结构划分，那么每个功能都对应一个或多个HTML界面</li><li>展现每个功能HTML页面必须要将处理的数据的内容和展现形式表示清楚</li><li>每个功能HTML页面不能孤零零存在，要将子模块下的所有功能HTML页面用超链接或按钮结合在一起，痛样子系统下所有模块的HTML页面也要整合在一起，最终整合成系统的一个完整的静态网站</li></ol></li></ol><h3 id="素材：解压第四章-html原型UI-—-gt-把文件里的内容复制到STS软件我们项目的WebContent文件夹里面并全部覆盖源文件-—-gt-同步并部署-—-gt-http-localhost-8080-infoSubSys-pages-login-jsp-打开网页"><a href="#素材：解压第四章-html原型UI-—-gt-把文件里的内容复制到STS软件我们项目的WebContent文件夹里面并全部覆盖源文件-—-gt-同步并部署-—-gt-http-localhost-8080-infoSubSys-pages-login-jsp-打开网页" class="headerlink" title="素材：解压第四章 html原型UI —-&gt; 把文件里的内容复制到STS软件我们项目的WebContent文件夹里面并全部覆盖源文件 —-&gt;同步并部署  —-&gt;http://localhost:8080/infoSubSys/pages/login.jsp 打开网页"></a>素材：解压第四章 html原型UI —-&gt; 把文件里的内容复制到STS软件我们项目的WebContent文件夹里面并全部覆盖源文件 —-&gt;同步并部署  —-&gt;<a href="http://localhost:8080/infoSubSys/pages/login.jsp">http://localhost:8080/infoSubSys/pages/login.jsp</a> 打开网页</h3><h4 id="以上步骤是在前几次课程的基础上使用"><a href="#以上步骤是在前几次课程的基础上使用" class="headerlink" title="以上步骤是在前几次课程的基础上使用"></a>以上步骤是在前几次课程的基础上使用</h4><ol><li><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/image-20221021114917233.png" alt="image-20221021114917233"></li></ol><h2 id="数据库-MySql"><a href="#数据库-MySql" class="headerlink" title="数据库(MySql)"></a>数据库(MySql)</h2><ol><li><p><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/image-20221021115317245.png" alt="image-20221021115317245"></p><ol><li>在数据库技术中，数据还是以文件的形式存放到外部存储设备上，被称为数据库(Data Base),简称DB</li><li>数据库技术在数据之上还可以一个队数据进行管理的系统，即数据库管理系统，( Database management system)，简称DBMS。</li><li>DBMS是位于用户与数据库(OS)之间的一层数据管理软件，它为用户或应用程序提供访问数据库的方法，包括数据库的创建、查询、更新及各种数据控制，它被称为数据库系统的和兴</li><li>目前比较流行的DBMS有Oracle、MySQL、SQLServer、PostgreSQL等，本课程采用MySQL</li></ol></li><li><p>MySQL简介</p><ol><li>MySQL是一款安全、跨平台，高效的、并与PHP、Java等主流语言紧密结合的数据库系统</li><li>等等等等…………………..</li></ol></li><li><p>数据模型的要素</p><ol><li><p>数据模型所描述的内容包括三个部分：数据结构、数据操作、数据约束</p><ol><li>数据结构:数据模型中的数据结构主要描述数据的类型、内容、性质以及数据间的联系等。数据结杓是数据模型的基础，数据操作和约束都建立在数据结构上。不同的数据结构具有不同的操作和约束。</li><li>数据操作:数据模型中数据操作主要描述在相应的数据结构上的操作类型和操作方式。</li><li>数据约束:数据模型中的数据约束主要描述数据结构内数据间的语法、词义联系、它们之间的制约和依存关系，以及数据动态变化的规则，以保证数据的正确、有效和相容。</li></ol></li><li><p>数据模型的分类</p><ol><li>在数据库发展的历程中，根据数据模型的数据结构可以分为三种主要的模型，分别是层次模型、网状模型和关系模型</li></ol></li></ol></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 课堂笔记 </tag>
            
            <tag> STS </tag>
            
            <tag> tomcat </tag>
            
            <tag> JavaWeb </tag>
            
            <tag> 成都东软学院(CNU) </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>22-10-20(选修课Python)</title>
      <link href="/post/279ff13a.html"/>
      <url>/post/279ff13a.html</url>
      
        <content type="html"><![CDATA[<h2 id="Python-大数据与量化"><a href="#Python-大数据与量化" class="headerlink" title="Python 大数据与量化"></a>Python 大数据与量化</h2><h2 id="上课开飞机去了，我只知道讲了金融方面的知识！！嘿嘿！！woc这飞机这分钟开着不香了！！！！"><a href="#上课开飞机去了，我只知道讲了金融方面的知识！！嘿嘿！！woc这飞机这分钟开着不香了！！！！" class="headerlink" title="上课开飞机去了，我只知道讲了金融方面的知识！！嘿嘿！！woc这飞机这分钟开着不香了！！！！"></a>上课开飞机去了，我只知道讲了金融方面的知识！！嘿嘿！！woc这飞机这分钟开着不香了！！！！</h2>]]></content>
      
      
      
        <tags>
            
            <tag> 课堂笔记 </tag>
            
            <tag> Python </tag>
            
            <tag> 选修课 </tag>
            
            <tag> 成都东软学院 </tag>
            
            <tag> 大数据 </tag>
            
            <tag> 量化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>课堂笔记22-10-20(Java面向对象程序设计)</title>
      <link href="/post/5012e640.html"/>
      <url>/post/5012e640.html</url>
      
        <content type="html"><![CDATA[<h2 id="Java面向对象程序设计"><a href="#Java面向对象程序设计" class="headerlink" title="Java面向对象程序设计"></a>Java面向对象程序设计</h2><ol><li><p>类的定义</p><ol><li><p>案例</p><ol><li><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/22-10-20-001.png" alt="image-20221020140400292"></li><li><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/22-10-20-002.png" alt="image-20221020140421772"></li></ol></li><li><p>在Java中，定义在类中的变量被称为成员变量，定义在方法中的变量被称为局部变量。如果在某一个方法中定义的局部变量与成员变量同名，这种情况是允许的，此时方法中通过变量名访问到的是局部变量，而并非成员变量，请阅读下面的示例代码:</p><ol><li><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/22-10-20-003.png" alt="image-20221020140632872"></li></ol></li><li><p>对象的创建与使用</p><ol><li><p>和数组相似，对象也是引用数据类型，只能使用new运算符从堆中分配内存;</p></li><li><p>创建对象的一般语法：</p><ol><li>类名  对象名称 &#x3D; new   类名（）;</li><li>列如：Person p &#x3D; new Person ();</li></ol></li><li><p>使用已经定义好的类，创建该类对象的过程称为“实例化”。</p></li><li><p>Person p &#x3D; new Person() ; </p><ol><li>new Person( )”用于创建Person类的一个实例对象;</li><li>“Person p”则是声明了一个Person类型的变量p。</li><li>“中间的等号”用于将Person对象在内存中的地址赋值给变量p，这样变量p便持有了对象的引用。</li><li><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/22-10-20-004.png" alt="image-20221020141732109"></li></ol></li><li><p>只有先实例化类的对象，才可以访问到类中的成员(属性和方法）;</p></li><li><p>使用成员运算符（.）来访问成员属性或成员方法;</p></li><li><p>一般语法是：</p><ol><li>对象名.成员名</li></ol></li><li><p>案例分析</p><ol><li>案例分析一<ol><li><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/22-10-20-005.png" alt="image-20221020141922148"></li><li><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/22-10-20-006.png" alt="image-20221020141937431"></li></ol></li><li>案例分析二<ol><li><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/22-10-20-007.png" alt="image-20221020142234931"></li><li><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/22-10-20-008.png" alt="image-20221020142252577"></li></ol></li></ol></li><li><p>在实例化对象时，Java虚拟机会自动为成员变量进行初始化，针对不同类型的成员变量，Java虚拟机会赋予不同的初始值，如下表所示。</p><ol><li><table><thead><tr><th>成员变量</th><th>初始值</th></tr></thead><tbody><tr><td>byte</td><td>0</td></tr><tr><td>short</td><td>0</td></tr><tr><td>int</td><td>0</td></tr><tr><td>long</td><td>0L</td></tr><tr><td>float</td><td>0.0F</td></tr><tr><td>double</td><td>0.0D</td></tr><tr><td>char</td><td>空字符’\u0000’</td></tr><tr><td>boolean</td><td>false</td></tr><tr><td>引用数据类型</td><td>nulll</td></tr></tbody></table></li></ol></li><li><p>权限访问</p><ol><li><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/22-10-20-009.png" alt="image-20221020151140235"></li><li><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/22-10-20-0010.png" alt="image-20221020151149840"></li><li><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/22-10-20-0011.png" alt="image-20221020151200953"></li><li>只允许在类内部的方法中使用，无法从类的外部访问私有成员</li><li>其它类独栋私有成员对于当前类也是隐藏的</li></ol></li><li><p>类的封装</p><ol><li>在设计一个类时，应该对成员变量的访问作出一些限定，不允许外界随意访问，这就需要实现类的封装。</li><li>所谓类的封装是指在定义一个类时，将类中的属性私有化，即使用private关键字来修饰,私有属性只能在它所在类中被访问;如果外界想要访问私有属性，需要提供一些使用public修饰的公有方法,其中包括用于获取属性值的getXxx方法和设置属性值的setXxx方法。</li></ol></li><li><p>在思想方面，遵纪守法，积极进取﹔在学习方面，勤奋刻苦，认真按时完成作业，不旷课，不早退，成绩优异，学习成绩靠前﹔在班级工作方面，努力配合班委工作，真心实意为同学们服务﹔在社团工作方面，积极参加社团工作，奉献自我，锻炼自我﹔在文体活动方面，热心参与班级风采展示，积极展示自我风采﹔在社会实践方面，乐于参加志愿服务活动，提高书本外的能力。</p></li></ol></li></ol></li></ol><h4 id="课后作业：完成私有成员的set，get用法"><a href="#课后作业：完成私有成员的set，get用法" class="headerlink" title="课后作业：完成私有成员的set，get用法"></a>课后作业：完成私有成员的set，get用法</h4>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 成都东软学院（CNU） </tag>
            
            <tag> 课堂笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>课堂笔记22-10-20(HTML页面设计)</title>
      <link href="/post/9f04fead.html"/>
      <url>/post/9f04fead.html</url>
      
        <content type="html"><![CDATA[<h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><ol><li><strong>重点</strong> css3 广义动画效果<ol><li>tansithion 过滤&#x2F;渐变 css3 过滤是袁术从一种样式逐渐改变为另一种的效果.</li><li>CSS3 2D 转换及3D转换<ol><li>属性 Translate </li><li>属性值 Transform 平移，x , y ,正方向，负方向</li><li>rotate 旋转</li><li>scale 缩放 </li><li>skew 扭曲倾斜</li></ol></li><li>动画属性 animation 用来引用动画规则，定义动画规则的是@keyframes</li></ol></li></ol><h2 id="理解”盒子”概念"><a href="#理解”盒子”概念" class="headerlink" title="理解”盒子”概念"></a>理解”盒子”概念</h2><ol><li><p>border 、 padding 、 marging</p><ol><li><p><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/001.png" alt="image-20221020110216225"></p></li><li><p>课堂小任务</p><ol><li><p>新建一个项目，编写两个div，两个imag，算出两个img的宽高</p><ol><li><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/003.jpg"></li></ol></li><li><p><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/002.png" alt="image-20221020112811602"></p></li></ol></li><li><p>box-sizing 属性</p><ol><li><p>在 CSS 盒子模型的默认定义里，你对一个元素所设置的 width 与 height 只会应用到这个元素的内容区。如果这个元素有任何的 border 或 padding ，绘制到屏幕上时的盒子宽度和高度会加上设置的边框和内边距值。这意味着当你调整一个元素的宽度和高度时需要时刻注意到这个元素的边框和内边距。当我们实现响应式布局时，这个特点尤其烦人。</p></li><li><p>box-sizing 属性可以被用来调整这些表现：</p><ol><li><p>content-box 是默认值。如果你设置一个元素的宽为 100px，那么这个元素的内容区会有 100px 宽，并且任何边框和内边距的宽度都会被增加到最后绘制出来的元素宽度中。</p></li><li><p>border-box 告诉浏览器：你想要设置的边框和内边距的值是包含在 width 内的。也就是说，如果你将一个元素的 width 设为 100px，那么这 100px 会包含它的 border 和 padding，内容区的实际宽度是 width 减去 (border + padding) 的值。大多数情况下，这使得我们更容易地设定一个元素的宽高。 注： border-box不包含margin</p></li><li><p><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/004.jpg"></p></li></ol></li></ol></li><li><p>盒子浮动属性-float</p><ol><li><p>浮动布局-文字环绕效果</p><ol><li><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/005.jpg"></li></ol></li><li><p>floatnavi</p><ol><li><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/006.jpg"></li><li><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/007.jpg"></li></ol></li><li><p>clearfloat</p><ol><li><p><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/008.jpg"></p></li><li><p><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/009.jpg"></p></li></ol></li></ol></li></ol></li></ol><h4 id="课后作业就是学习通老师上传的HTML实验一！！！"><a href="#课后作业就是学习通老师上传的HTML实验一！！！" class="headerlink" title="课后作业就是学习通老师上传的HTML实验一！！！"></a>课后作业就是学习通老师上传的HTML实验一！！！</h4>]]></content>
      
      
      
        <tags>
            
            <tag> 成都东软学院（CNU） </tag>
            
            <tag> 课堂笔记 </tag>
            
            <tag> HTML </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>课堂笔记22-10-19（Python语言程序设计)</title>
      <link href="/post/fa4c7a49.html"/>
      <url>/post/fa4c7a49.html</url>
      
        <content type="html"><![CDATA[<h2 id="一-Random函数-随机模块"><a href="#一-Random函数-随机模块" class="headerlink" title="一.Random函数  随机模块"></a>一.Random函数  随机模块</h2><ol><li><p>函数名 描述   “import random as R”</p><ol><li><p>R.randint(a,b) 返回一个随机的整数(包含a,也包含b)</p><ol><li><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/001.jpg"></li></ol></li><li><p>R.random() 返回一个[0, 1) 之间的随机实数</p><ol><li><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/002.jpg"></li></ol></li><li><p>R.uniform(a,b) 返回[a,b) 区间内的随机实数</p><ol><li><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/003.jpg"></li></ol></li><li><p>R.randrange([start,] stop[, step]) 返回range(start,stop,step)中的随机数（包括开头，不包括结尾）</p><ol><li><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/004.jpg"></li></ol></li><li><p>R.choice(seq) 从序列中返回随意元素</p><ol><li><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/005.jpg"></li></ol></li><li><p>R.shuffle(seq[, random]) 随机指定序列的顺序(乱序序列）</p></li><li><p>R.sample(seq,n) 从序列中选择n个随机且不重复的元素</p></li><li><p>R.getrandbits(nbit) 以长整型的形式返回用nbit位来表示的随机数</p></li><li><p>R.seed(a&#x3D;None) 用给定的数a设置随机种子,不给参数a则用当前时间设置随机种子</p></li></ol></li><li><p>课堂练习</p><ol><li><p>随机生成六位数字验证码</p><ol><li><p><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/2.001.jpg"></p></li><li><p><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/2.002.jpg"></p></li></ol></li><li><p>随机生成六位验证码包括字母数字</p><ol><li><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/2.003.jpg"></li></ol></li></ol></li></ol><h2 id="Math-数学模块"><a href="#Math-数学模块" class="headerlink" title="Math 数学模块"></a>Math 数学模块</h2><ol><li><p>不需要导入math数学函数的数学函数</p><ol><li><p>abs():返回一个数的绝对值</p></li><li><p>max()&#x2F;min():最大数&#x2F;最小数</p></li><li><p>pow(): 幂运算</p></li><li><p>round():四舍五入</p></li><li><p>divmod():获取商和余数</p></li><li><p>sun():求和</p></li></ol></li><li><p>Math模块</p><ol><li><p>ceil(x)&#x2F;floor(y):向上向下取整</p><ol><li><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/2.2.001.jpg"></li></ol></li><li><p>comb(n,k):组合运算</p></li><li><p>degrees(x)&#x2F;radians(y):角度转换：(弧度 - 度)&#x2F;(度 - 弧度)</p></li><li><p>exp(x)&#x2F;pow(x,y):e的x次幂&#x2F;x的y次幂</p></li><li><p>fabs(x):返回x的绝对值</p></li><li><p>gcd(*integers):返回最大公约数</p></li><li><p>isclose()&#x2F;isfinite(x)&#x2F;isinf(x)&#x2F;isnan(x):两个值是否接近&#x2F;两个值是否无穷大或NaN&#x2F;两个值是否无穷大&#x2F;两个值是否NaN&lt;非数字&gt;</p></li><li><p>log(x[,base]):返回x以base为底的对数</p></li><li><p>log2(x)&#x2F;log10(x):返回x以2&#x2F;以10为底的对数，比log()更精确</p></li><li><p>madf(x)&#x2F;trunc(x):返回x的小数和整数部分，两个结果都是带有x的符号并且是浮点数&#x2F;返回x的整数部分</p></li><li><p>sqrt(x):返回x的平方根</p></li><li><p>(略)：各种(反)三角函数&#x2F;双曲函数</p></li><li><p>pi&#x2F;e&#x2F;tau:圆周率常熟π&#x2F;自然常熟&#x2F;常熟r-2π</p></li><li><p>inf&#x2F;nan:浮点正无穷大&lt;对于无穷大,使用 -math.inf&gt;&#x2F;浮点“非数字”（NaN)值</p></li><li><p>copysign(x,y):返回一个基于x的绝对值和y的符号的浮点数</p></li></ol></li></ol><h2 id="课后作业"><a href="#课后作业" class="headerlink" title="课后作业"></a>课后作业</h2><ol><li><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/10-19-001.png"></li><li><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/10-19-002.png"></li></ol><h4 id="注：课堂案例代码没有全部有例子（主要是太累了，请私下自己琢磨吧），因格式问题所以代码区上传图片，课后作业答案会编写到下一节Python课课堂笔记后！！！"><a href="#注：课堂案例代码没有全部有例子（主要是太累了，请私下自己琢磨吧），因格式问题所以代码区上传图片，课后作业答案会编写到下一节Python课课堂笔记后！！！" class="headerlink" title="注：课堂案例代码没有全部有例子（主要是太累了，请私下自己琢磨吧），因格式问题所以代码区上传图片，课后作业答案会编写到下一节Python课课堂笔记后！！！"></a>注：课堂案例代码没有全部有例子（主要是太累了，请私下自己琢磨吧），因格式问题所以代码区上传图片，课后作业答案会编写到下一节Python课课堂笔记后！！！</h4>]]></content>
      
      
      
        <tags>
            
            <tag> 成都东软学院（CNU） </tag>
            
            <tag> 课堂笔记 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>上课笔记22-10-18(Java面向对象程序设计)</title>
      <link href="/post/18c18e70.html"/>
      <url>/post/18c18e70.html</url>
      
        <content type="html"><![CDATA[<h2 id="一-JAVA基础"><a href="#一-JAVA基础" class="headerlink" title="一. JAVA基础"></a>一. JAVA基础</h2><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><h2 id="二-面向对象的特征"><a href="#二-面向对象的特征" class="headerlink" title="二.面向对象的特征"></a>二.面向对象的特征</h2><ol><li>面向过程就是分析出解决问题所需要的步骤，然后用函数吧这个步骤一一实现，使用的时候依次调用就可以了。</li><li>面向对象是吧构成问题的事物按照一定规划分为多个独立的对象，然后通过调用对象的方法来解决问题。<ol><li>如果出现问题只需要修改个别的对象就可以了</li></ol></li><li>SP和OOP对比<ol><li><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/image-20221018161848267.png"></li></ol></li><li>面向对象的特征主要可以概括为封装、继承、多态<ol><li>封装<ol><li>是面向对象的核心思想，将对象的属性和行为封装起来，不需要让外界知道具体的实现细节，就是封装思想</li></ol></li><li>继承<ol><li>主要描述的是类与类之间的关系，通过继承，可以在无需要新编写原有类的情况下，对原有类的功能进行扩展。他是多态实现的前提</li></ol></li><li>多态<ol><li>指的是不同的类进行同一操作可以有不同的行为。即在一个类中定义的属性和方法被其它类继承后，它们可以具有不同的数据类型或表现出不同的行为，这使得同一个属性和方法在不同的类中具有不同的语义。</li></ol></li></ol></li><li>00程序的标准<ol><li>易复用</li><li>易扩展</li><li>易维护</li></ol></li></ol><h2 id="二-一类与对象的概念"><a href="#二-一类与对象的概念" class="headerlink" title="二.一类与对象的概念"></a>二.一类与对象的概念</h2><ol><li><p>类</p><ol><li>一组具有相同数据结构和相同操作对象的模板。是现实世界中所有相同性质的对象的抽象，为同类对象规范通用的状态和行为</li></ol></li><li><p>对象：</p><ol><li>类的具体表现形式。是满足类规范的具体实例，是真正执行功能的主体。</li></ol></li><li><p>类与对象的关系</p><ol><li>抽象与具体</li></ol></li><li><p>在面向对象的思想中最核心的就是对象，为了在程序中创建对象，首先需要定义一个类，用于描述一组对象的共同特征和行为。</p></li><li><p>类中可以定义成员变量(成员数据）和成员方法(成员函数),其中成员变量用于描述对象的特征，也被称作属性，成员方法用于描述对象的行为，可简称为方法。</p></li><li><p><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/10.18.002.png" alt="类举例"></p></li><li><p>类的定义</p><ol><li><p><img src="https://picgo-pu-1307892539.cos.ap-chengdu.myqcloud.com/image-20221018165550001.png"></p></li><li><p>定义类的基本结构</p><ol><li><p>权限修饰符 class 类名 [extends 父类名 | implements 接口类 ]</p><ol><li>权限修饰符:为public或者缺省。public用来声明该类为公有类,可以被别的对象访问。定义为公有的类存储的文件名为类名。</li><li>类名:用户自定义的标识符，用来标志这个类的引用。</li></ol></li><li><p>定义成员变量</p><ol><li>有public、 private、 protected和默认权限四种<ol><li>public:公共权限，可以被所有类访问</li><li>private：私有权限，只允许在类定义自身范围内使用，若从外部访问，必须通过构造方法间接进行访问</li><li>protected:受保护权限，可以被类本身、其子类访问，或者被与类定义同在一个包中的其他类访问</li><li>默认权限:也称package访问限，无修饰符，可以被类自身或类同包的其他类访问</li></ol></li><li>数据类型:包括基本类型以及用户自定义的扩展类型</li></ol></li><li><p>特定修饰符</p><ol><li>static:静态的，所有对象共享的类成员。</li><li>final:表示常量，不能修改。</li><li>transient:表示暂时性变量，与对象的序列化技术相关。</li><li>volatile:表示不稳定的，与多线程并发控制相关。</li></ol></li></ol></li></ol></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 成都东软学院（CNU） </tag>
            
            <tag> 课堂笔记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
